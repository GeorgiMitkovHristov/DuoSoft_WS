
/**
 * Please modify this class to meet your needs
 * This class is not complete
 */

package org.bg.bpo.register.search;

import java.util.ArrayList;
import java.util.List;
import java.util.logging.Logger;

import org.bg.bpo.register.dbconnection.DatabaseConnector;
import org.bg.bpo.register.entities.schema_tmview.Mark;
import org.bg.bpo.register.transform.ResultTypeTransformator;

/**
 * This class was generated by Apache CXF 2.7.16
 * 2015-06-23T12:52:50.970+03:00
 * Generated source version: 2.7.16
 * 
 */

@javax.jws.WebService(
                      serviceName = "BPOSearchService",
                      portName = "BPOSearchServiceDefaultPort",
                      targetNamespace = "http://bg.org/bpo/register/search/",
                      wsdlLocation = "file:/C:/Users/Георги/git/DuoSoft_WS/bpo.register.ws.provider/src/main/resources/bpo-register-search.wsdl",
                      endpointInterface = "org.bg.bpo.register.search.BPORegisterSearch")
                      
public class BPORegisterSearchImpl implements BPORegisterSearch {
    private static final Logger LOG = Logger.getLogger(BPORegisterSearchImpl.class.getName());

    /* (non-Javadoc)
     * @see org.bg.bpo.register.search.BPORegisterSearch#getMarkByRegNum(int  regnum )*
     */
    public java.util.List<bg.egov.regix.patentdepartment.TradeMarkType> getMarkByRegNum(int regnum) {
    	String regnumStr = String.valueOf(regnum);
        LOG.info("Executing operation getMarkByRegNum with param value regnum: "+regnumStr);
        
        try {
    		DatabaseConnector dbConn = DatabaseConnector.getInstance();
            java.util.List<bg.egov.regix.patentdepartment.TradeMarkType> _return = new ResultTypeTransformator(dbConn.getMarksByRegNum(regnum), dbConn).transformToResultType();
            return _return;
        } catch (java.lang.Exception ex) {
            LOG.log(java.util.logging.Level.SEVERE, ex.getMessage(), ex);
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see org.bg.bpo.register.search.BPORegisterSearch#getMarksByName(java.lang.String  markname )*
     */
    public java.util.List<bg.egov.regix.patentdepartment.TradeMarkType> getMarksByName(java.lang.String markname) { 
        LOG.info("Executing operation getMarksByName with param value markname: "+markname);
        
        try {
    		DatabaseConnector dbConn = DatabaseConnector.getInstance();
            java.util.List<bg.egov.regix.patentdepartment.TradeMarkType> _return = new ResultTypeTransformator(dbConn.getMarksByAppName(markname), dbConn).transformToResultType();
            return _return;
        } catch (java.lang.Exception ex) {
            LOG.log(java.util.logging.Level.SEVERE, ex.getMessage(), ex);
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see org.bg.bpo.register.search.BPORegisterSearch#getMarkByOwnersName(java.lang.String  fname ,)java.lang.String  sname ,)java.lang.String  lname )*
     */
    public java.util.List<bg.egov.regix.patentdepartment.TradeMarkType> getMarkByOwnersName(java.lang.String fname,java.lang.String sname,java.lang.String lname) { 
        LOG.info("Executing operation getMarkByOwnersName with param value fname: "+fname+", with param value sname: "+sname+", with param value lname: "+lname);
        
        try {
    		DatabaseConnector dbConn = DatabaseConnector.getInstance();
            java.util.List<bg.egov.regix.patentdepartment.TradeMarkType> _return = new ResultTypeTransformator(dbConn.getMarksByOwnerName(fname, sname, lname), dbConn).transformToResultType();
            return _return;
        } catch (java.lang.Exception ex) {
            LOG.log(java.util.logging.Level.SEVERE, ex.getMessage(), ex);
            throw new RuntimeException(ex);
        }
    }

    /* (non-Javadoc)
     * @see org.bg.bpo.register.search.BPORegisterSearch#getMarkByAppNum(java.lang.String  appnum )*
     */
    public java.util.List<bg.egov.regix.patentdepartment.TradeMarkType> getMarkByAppNum(java.lang.String appnum) { 
        LOG.info("Executing operation getMarkByAppNum with param value appnum: "+appnum);
        
        try {
    		DatabaseConnector dbConn = DatabaseConnector.getInstance();
    		List<Mark> marks = new ArrayList<Mark>();
    		marks.add(dbConn.getMarkByAppNum(appnum));
            java.util.List<bg.egov.regix.patentdepartment.TradeMarkType> _return = new ResultTypeTransformator(marks, dbConn).transformToResultType();
            return _return;
        } catch (java.lang.Exception ex) {
            LOG.log(java.util.logging.Level.SEVERE, ex.getMessage(), ex);
            throw new RuntimeException(ex);
        }
    }

}
